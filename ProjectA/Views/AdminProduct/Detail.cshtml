@model ProjectA.ViewModels.adminProductViewModel
@{
    ViewBag.Title = "Detail";
    Layout = "~/Views/Shared/AdminHome.cshtml";
}

<script src="@Url.Content("~/Scripts/jquery-1.7.1.js")" type="text/javascript"></script>

<!-- Associated dropdown list-->
<script type="text/javascript">
    $(document).ready(function () {
        $('#MainCategoryName').change(function () {
            getSubCategory();
        });
        $('#SubCategoryName').trigger('change');
        getSubCategory();

    });

    function getSubCategory() {
        $('#SubCategoryName').prop("disabled", false);

        var selectedMainCategory = $('#MainCategoryName').val();

        var SubCategorySelect = $('#SubCategoryName');
        SubCategorySelect.empty();

        if (selectedMainCategory != null && selectedMainCategory != '') {
            $.getJSON("/AdminProduct/change", { mainCategory: selectedMainCategory }, function (subcategories) {

                $.each(subcategories, function (index, subcategory) {
                    SubCategorySelect.append($('<option/>', {
                        value: subcategory.Value,
                        text: subcategory.Text
                    }));
                });
            });
        }
        else {
            $('#SubCategoryName').prop("disabled", true);
        }
    }
</script>


<script type="text/javascript">
    $(document).ready(function () {
        if ($('#ifPromoted').val() == "True")
            $('#promotedPrice').prop("disabled", false)
        else
            $('#promotedPrice').prop("disabled", true)

        $('#ifPromoted').change(function () {
            if ($('#ifPromoted').val() == "True")
                $('#promotedPrice').prop("disabled", false)
            else
                $('#promotedPrice').prop("disabled", true)
        });


        $('#addMore').click(function () {
            var itemIndex = $('.fileupload').length;

            $('#thumbOthers').append(
                '<div class="fileupload fileupload-new" data-provides="fileupload" style="display:inline-block; margin-right:5px;" id="items' + itemIndex + '">' +

                    '<button type="button" class="close" aria-hidden="true" id="remove' + itemIndex + '" onclick="removeMe(' + itemIndex + ')">&times;</button>' +

                    '<div class="fileupload-new thumbnail" style="width: 100px; height: 50px;">' +
                        '<img src="http://www.placehold.it/100x50/EFEFEF/AAAAAA&text=no+image" />' +
                    '</div>' +

                    '<div class="fileupload-preview fileupload-exists thumbnail" style="max-width: 100px; max-height: 50px; line-height: 20px;"></div>' +

                    '<div>' +
                        '<span class="btn btn-file btn-success" style="float:left;"><span class="fileupload-new">Select image</span><span class="fileupload-exists">Change</span><input type="file" accept="image/"  id="FileItems' + itemIndex + '" name="imgFiles[' + itemIndex + ']" /></span>' +

                    '</div>' +
                '</div>'
            )
        });



    });

</script>

<script type="text/javascript">
    function removeMe(imgId, index) {

        $.post("/AdminProduct/DeleteImg", { "imgId": imgId },
          function (data) {

              $('#imgMessage').html('<img src="@Url.Content("~/Content/themes/base/images/tick.png")" />' + data).css("color", "green");
              $('#updateMessage').remove();
          });

          $('#thumbOthers').find('#items' + index).remove();

          var newI = parseInt(index) + 1;
          while ($('#items' + newI).length != 0) {
              $('#thumbOthers').find('#FileItems' + newI).attr('name', 'imgFiles[' + (newI - 1) + ']').attr('id', 'FileItems' + (newI - 1));
              $('#thumbOthers').find('#items' + newI).attr('id', 'items' + (newI - 1));
              $('#thumbOthers').find('#remove' + newI).attr('onclick', 'removeMe(' + (newI - 1) + ')');
              $('#thumbOthers').find('#remove' + newI).attr('id', 'remove' + (newI - 1));
              newI = parseInt(newI) + 1;
          }



        //alert(2);
      }
</script>

@using (Html.BeginForm("Detail", "AdminProduct", new { productId = Model.productId }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="container-fluid">

        <div class="row-fluid">



            <div class="span12">
                <div class="row-fluid">

                    <div id="Gallery" style="height: auto; width: auto;">
                        @foreach (var img in Model.images)
                        {
                            if (img.IfCoverPic == true)
                            {
                            <div id="thumbMain">

                                <div class="fileupload fileupload-new" data-provides="fileupload">
                                    <div class="fileupload-new thumbnail" style="width: 300px; height: 150px;">
                                        <img src="@Url.Action("getProductImg", "Product", new { data = img.ImageId })" />
                                    </div>

                                    <div class="fileupload-preview fileupload-exists thumbnail" style="max-width: 200px; max-height: 150px; line-height: 20px;"></div>

                                    <div>
                                        <input type = "text" value="@img.ImageId" name="imgFilesId[0]" style="display:none"/>
                                        <span class="btn btn-file btn-success"><span class="fileupload-new">Select image</span><span class="fileupload-exists">Change</span><input type="file" accept="image/" name="imgFiles[0]" value="largeImage" /></span>
                                        <a href="#" class="btn fileupload-exists" data-dismiss="fileupload">Remove</a>
                                    </div>
                                </div>
                                <button class="btn btn-medium" id="addMore" type="button">Add More</button>

                            </div>
                            }
                        }
                        <div id="thumbOthers" style="width: auto; max-width: 750px; margin-top: 20px;">
                            @{var imgFileNum = 1;}
                            @foreach (var img in Model.images)
                            {

                                if (img.IfCoverPic == false)
                                {
                                    <div class="fileupload fileupload-new" data-provides="fileupload" style="display:inline-block; margin-right:5px;" id="items@(imgFileNum)">
                                        <a class="close" id="deleteImg_@(imgFileNum)" href="#modal-container-@(imgFileNum)" role="button" data-toggle="modal" >&times;</a>

                                        <div class="fileupload-new thumbnail" style="width: 100px; height: 50px;">
                                            <img src="@Url.Action("getProductImg", "Product", new { data = img.ImageId })" />
                                        </div>

                                        <div class="fileupload-preview fileupload-exists thumbnail" style="max-width: 100px; max-height: 50px; line-height: 20px;"></div>
                                        <input type = "text" value="@img.ImageId" name="imgFilesId[@imgFileNum]" style="display:none"/>
 
                                        <div>                                       
                                            <span class="btn btn-file btn-success" style="float: left;"><span class="fileupload-new">Select image</span><span class="fileupload-exists">Change</span><input type="file" accept="image/" id="FileItems@(imgFileNum)" name="imgFiles[@imgFileNum]" /></span>
                                        </div>
                                    </div>
                                    

                                    <div id="modal-container-@(imgFileNum)" class="modal hide fade" role="dialog" aria-labelledby="myModalLabel1" aria-hidden="true">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                                            <h3 id="myModalLabel1">Attention
                                            </h3>
                                        </div>
                                        <div class="modal-body">
                                            <p>
                                                Are you sure that you want to delete this existed image permanently?
                                            </p>
                                        </div>
                                        <div class="modal-footer">
                                            <button class="btn" data-dismiss="modal" aria-hidden="true">No</button>
                                            <button class="btn btn-primary" data-dismiss="modal" onclick="removeMe('@(img.ImageId)','@(imgFileNum)')" >Yes</button>
                                        </div>
                                    </div>

                                    imgFileNum += 1;
                                    
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="span6" id="imgMessage">

            </div>

            @if (!String.IsNullOrEmpty(Convert.ToString(TempData["AddResult"]))) 
            {
                <div class="span6 alert alert-success" id="updateMessage">

                       <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <span>
                            
                                <img src="@Url.Content("~/Content/themes/base/images/tick.png")" />
                                @TempData["AddResult"]
                           
                        </span>
                </div>
             }
        </div>


        <div class="row-fluid" style="margin-top: 30px; padding: 30px 0 20px 30px; height: auto;">

            <div class="span12" style="text-align: left;">
                <div class="row-fluid">

                    <div class="span6">
                        <div class="control-group">
                            <label class="control-label" for="ProductsName">Products Name</label>
                            <div class="controls">
                                @Html.EditorFor(model => model.productName)

                            </div>
                        </div>

                        <div class="control-group">
                            <label class="control-label" for="UnitPrice">Unit Price</label>
                            <div class="controls">
                                @Html.EditorFor(model => model.productPrice)
                            </div>
                        </div>


                        <div class="control-group">
                            <label class="control-label" for="StockNumber">In Stock</label>
                            <div class="controls">
                                @Html.EditorFor(model => model.stockNumber)
                            </div>
                        </div>

                        <div class="productDescription">
                            <label>Product Description</label>
                            <div class="controls">
                                @Html.TextAreaFor(model => model.productDescription, new { @style = "width:490px;" })
                            </div>

                            <div class="controls">
                                @Html.ValidationMessageFor(model => model.productDescription)
                            </div>
                        </div>

                    </div>

                    <div class="span6">
                        <div class="ifNewArrival">
                            <label>If NewArrival</label>
                            @Html.DropDownListFor(model => model.ifNewArrival, (SelectList)(ViewBag.TrueOrFalseSelectionList), String.Empty)
                        </div>

                        <div class="ifTopSales">
                            <label>If TopSales</label>
                            @Html.DropDownListFor(model => model.ifTopSales, (SelectList)(ViewBag.TrueOrFalseSelectionList), String.Empty)
                        </div>

                        <div class="Promotion" style="display: inline-block;">
                            <label>If Promoted</label>
                            @Html.DropDownListFor(model => model.ifPromoted, (SelectList)(ViewBag.TrueOrFalseSelectionList), String.Empty)
                        </div>

                        <div style="display: inline-block;">
                            @Html.TextBox("promotedPrice", Model.PromotedPrice, new { id = "promotedPrice", style = "width:80px;", })
                        </div>

                        <div class="MainCategory">
                            <label>MainCategory</label>
                            @Html.DropDownListFor(model => model.MainCategoryName, (SelectList)(ViewBag.mainCategory), String.Empty)
                        </div>


                        <div class="SubCategory">
                            <label>SubCategory</label>
                            @Html.DropDownListFor(model => model.SubCategoryName, (SelectList)(ViewBag.subCategory), String.Empty)
                        </div>
                    </div>

                </div>

                <div class="row-fluid" id="buttonGroup" style="margin-top:25px;">
                    <div class="span3">
                         <a class="btn btn-primary btn-block" href="@Url.Action("Index", "AdminProduct")">Go Back</a> 
                    </div>
                    <div class="span3">
                        <button class="btn btn-block btn-success" type="submit">Apply</button>
                    </div>
                    <div class="span3">
                        <div id="submit">
                            <a id="modal-@Model.productId" href="#modal-container-@Model.productId" role="button"  class="btn btn-danger btn-block" type="button" data-toggle="modal">Delete</a>
                        </div>

       
                        <div id="modal-container-@Model.productId" class="modal hide fade" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                                <h3 id="myModalLabel">Attention
                                </h3>
                            </div>
                            <div class="modal-body">
                                <p>
                                    Are you sure that you want to delete @Model.productId permanently?
                                </p>
                            </div>
                            <div class="modal-footer">
                                <button class="btn" data-dismiss="modal" aria-hidden="true">No</button>
                                <a class="btn btn-primary" href="@Url.Action("DeleteProduct", "AdminProduct", new { productId = Model.productId })">Yes</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


<script type="text/javascript" src="http://js.nicedit.com/nicEdit-latest.js"></script>\
<script type="text/javascript">
    //<![CDATA[
    bkLib.onDomLoaded(function () { nicEditors.allTextAreas() });
    //]]>
</script>
